% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metaLnr.R
\name{meta_lnr}
\alias{meta_lnr}
\title{Entity learners will be gathered together as one learner.}
\usage{
meta_lnr(
  data,
  target,
  learner = "ranger",
  learner_args = list(),
  var_selec = "Boruta",
  var_selec_arg = list(),
  aggregation = "ranger.cved",
  aggregation_args = list()
)
}
\arguments{
\item{data}{A list containing data entities.}

\item{target}{The target variables.}

\item{learner}{The name of the to be called.}

\item{learner_args}{Arguments to be passed to the learner function.}

\item{var_selec}{The function name to be called for variable selection. Do not set (or set to NULL) this argument to avoid variable selection step.}

\item{var_selec_arg}{Arguments to be passed to the variable selection function.}

\item{aggregation}{The aggregation function to built the final learner.}

\item{aggregation_args}{The arguments of the aggregation function.}
}
\value{
A learner of class \code{meta.lnr} containing:
\tabular{ll}{
   \code{layer_models} \tab The fitted model at each layer,\cr
   \code{aggregation_args} \tab The arguments of the aggregated function and\cr
   \code{aggregated_model} \tab The aggregated model.
 }
}
\description{
Entity learners will be gathered together as one learner.
}
\examples{
data(entities)
data(disease)
## Prepare entities.
entity_obj <- entity(object = entities$methylation,
                        layer = "methylation")
entity_obj <- add(object = entity_obj,
                     layer = "genexpr",
                      data = entities$genexpr)
entity_obj <- add(object = entity_obj,
                     layer = "proteinexpr",
                      data = entities$proteinexpr)
## Prepare learner arguments.
lrnarg_obj <- lrnarg(object = list(probability = TRUE),
                      layer = "methylation")
lrnarg_obj <- add(object = lrnarg_obj,
                   layer = "genexpr",
                   param = list(probability = TRUE))
lrnarg_obj <- add(object = lrnarg_obj,
                   layer = "proteinexpr",
                   param = list(probability = TRUE))
## Prepare variable selection arguments.
varselectarg_obj <- varselectarg(object = list(type = "probability",
                                                mtry.prop = 0.4),
                                  layer = "methylation")
varselectarg_obj <- add(object = varselectarg_obj,
                         layer = "genexpr",
                         param = list(type = "probability", mtry.prop = 0.5))
varselectarg_obj <- add(object = varselectarg_obj,
                         layer = "proteinexpr",
                         param = list(type = "probability", mtry.prop = 0.3))
## Train layer and meta learner
my_meta_lnr <- meta_lnr(data = entity_obj,
                       target = disease,
                       learner = "ranger",
                       learner_args = lrnarg_obj,
                       var_selec = "Boruta_ext",
                       var_selec_arg = varselectarg_obj,
                       aggregation = ranger.cved,
                       aggregation_args = list(validation = "createFolds",
                                              validation_args = list(),
                                              final_learner = "ranger",
                                              final_learner_args = list(mtry = 1,
                                                                           probability = TRUE)))
## Predict using the meta learner
data(test_entities)
data(test_disease)
my_meta_predictions <- predict(object = my_meta_lnr, data = test_entities)
print(my_meta_predictions)
## Brier score
print(mean((my_meta_predictions$meta_pred$predictions[ , 1] - (test_disease == 2))^2))

}
